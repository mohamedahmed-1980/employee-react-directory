{"version":3,"sources":["utils/API.js","components/Container/index.js","components/SearchForm/index.js","components/SearchResults/index.js","pages/Search.js","components/Header/index.js","components/Wrapper/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Container","props","className","style","children","SearchForm","value","search","onChange","handleInputChange","name","type","placeholder","id","SearchResults","onClick","sortByFirstName","results","map","result","src","picture","medium","first","last","title","dob","age","cell","Search","state","employees","error","event","setState","target","filteredResults","filter","x","sort","a","b","toLowerCase","y","API","then","res","data","catch","err","console","log","minHeight","this","Component","Header","alt","Wrapper","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c9aab8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Employees API\r\n\r\nexport default {\r\n\r\n  getEmployeeList: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=50\");\r\n  },\r\n\r\n};\r\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group\">\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          name=\"employee\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type employee name ..\"\r\n          id=\"employee\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SearchResults(props) {\r\n  return (\r\n    <table className=\"table table-striped table-bordered\">\r\n  <thead>\r\n    <tr key='Id'>\r\n          <td>Photo</td>\r\n          <td>First Name  <button className='btn btn-outline-info ml-5' onClick={props.sortByFirstName} >SORT</button></td>\r\n          <td>Last Name</td>\r\n          <td>Title</td>\r\n          <td>Age</td>\r\n        \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {props.results.map(result => (\r\n    \r\n        <tr key={result.cell}>\r\n          <td><img src = {result.picture.medium} /> </td>\r\n          <td>{result.name.first} </td>\r\n          <td>{result.name.last}</td>\r\n          <td>{result.name.title}</td>\r\n          <td>{result.dob.age}</td>\r\n        </tr>\r\n        \r\n      ))}\r\n  </tbody>\r\n</table>\r\n    // <ul className=\"list-group search-results\">\r\n    //   {props.results.map(result => (\r\n    //     <li key={result} className=\"list-group-item\">\r\n    //       <img alt=\"Dog\" src={result} className=\"img-fluid\" />\r\n    //     </li>\r\n    //   ))}\r\n    // </ul>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Container from \"../components/Container\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResults from \"../components/SearchResults\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    search: \"\",\r\n    employees: [],\r\n    results: [],\r\n    error: \"\"\r\n  };\r\n\r\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\r\n  componentDidMount() {\r\n    API.getEmployeeList()\r\n      .then(res => this.setState({ employees: res.data.results, results:  res.data.results}))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ search: event.target.value });\r\n    let filteredResults = this.state.employees.filter(x=>x.name.first == event.target.value);\r\n    this.setState({results: filteredResults});\r\n  };\r\n\r\n  sortByFirstName = () => {\r\n    let filteredResults = this.state.results.sort(function(a, b){\r\n        var x = a.name.first.toLowerCase();\r\n        var y = b.name.first.toLowerCase();\r\n        if (x < y) {return -1;}\r\n        if (x > y) {return 1;}\r\n        return 0;});\r\n    this.setState({results: filteredResults});\r\n  }\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container style={{ minHeight: \"80%\" }}>\r\n          <SearchForm\r\n            handleInputChange={this.handleInputChange}\r\n          />\r\n          <SearchResults results={this.state.results} sortByFirstName={this.sortByFirstName}/>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n    <img src=\"https://www.bannerhealth.com/-/media/images/project/bh/hero-images/for-employees/employees-hero.ashx\" alt=\"employee\"/>\r\n    <h1>Employee Dirctory</h1>\r\n    </div>\r\n    \r\n      );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\">{props.children}</main>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n      <Header />\n        <Wrapper>\n        \n          <Route exact path=\"/\" component={Search} />\n  \n          <Route exact path=\"/search\" component={Search} />\n        </Wrapper>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}